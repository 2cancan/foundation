<% @side_nav = "css" %>
<% @page_title = flex_video_title %>

<div class="row" id="mainContent">
  <div class="large-3 columns" role="complementary">
    <%= render "_sidebar.html.erb" %>
  </div>

  <div class="large-9 columns" role="main">
    <div class="row">
      <div class="large-12 columns">
        <h1 class="main-title"><%= @page_title %></h1>
        <h4 class="subheader"><%= flex_video_description %></h4>
      </div>
    </div>

    <div class="row">
      <div class="large-12 columns">

        <div class="section-container tabs switcheroo" data-section="tabs" data-options="one_Up: false; deep_linking: true">

          <section class="section">
            <h6 class="title" data-section-title><a href="#css">CSS</a></h6>
            <div class="content" data-slug="css">
              <h3>CSS Example</h3>
            </div>
          </section>

          <section class="section">
            <h6 class="title" data-section-title><a href="#scss">SCSS</a></h6>
            <div class="content" data-slug="scss">
              <h3>SCSS Example</h3>
            </div>
          </section>

        </div>
      </div>
    </div>
  </div>
</div>

    <!-- <div class="row">
      <div class="large-12 columns">

        <div class="row">
          <div class="large-6 columns">
            <div class="flex-video">
              <iframe width="420" height="315" src="http://www.youtube.com/embed/0_EW8aNgKlA" frameborder="0" allowfullscreen></iframe>
            </div>

            <p>4:3 is the default size for the .flex-video element, and the assumption for .flex-video for chrome (controls) height is based on YouTube.</p>
          </div>
          <div class="large-6 columns">
            <div class="flex-video widescreen vimeo">
              <iframe src="http://player.vimeo.com/video/21762736" width="400" height="225" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
            </div>

            <p>Because Vimeo places their chrome on the player itself, adding a class of .vimeo creates a container that is sized for the video only &mdash; no extra padding for the controls.</p>
          </div>
        </div>

        <hr>

        <h3>Build With Predefined HTML Classes</h3>
        <p>There are two ways to build flex-video containers in Foundation 4: with our predefined HTML classes or with our mixins. Building flex-video containers using our classes is simple, you'll just need to create a <code>&lt;div class="flex-video"&gt;</code> and apply the classes you want to style it appropriately.</p>

        <p>The available class options:</p>
        <ul class="disc">
          <li><code>widescreen</code>: Will give the player a widescreen aspect ratio.</li>
          <li><code>vimeo</code>: This will ensure that we don't add extra padding since Vimeo has controls within the player, itself.</li>
        </ul>

<%= code_example '
<div class="flex-video">
  <iframe width="420" height="315" src="http://www.youtube.com/embed/0_EW8aNgKlA" frameborder="0" allowfullscreen></iframe>
</div>', :html %>

        <p>For these styles to come across, make sure you have the default Foundation CSS package or that you've selected flex-video from a custom package. These should be linked up following our default <a href="../index.html#basicHTMLMarkup">HTML page structure</a>.</p>

        <hr>

        <h3>Build with our Mixins</h3>
        <p>We've included SCSS mixins used to style labels. To use the mixin, you'll need to have the <a href="../sass.html">extension installed</a> or grab <a href="https://github.com/zurb/foundation/blob/master/scss/foundation/_variables.scss">_variables.scss</a>, <a href="https://github.com/zurb/foundation/blob/master/scss/foundation/components/_global.scss">_global.scss</a> and <a href="https://github.com/zurb/foundation/blob/master/scss/foundation/components/_flex-video.scss">_flex-video.scss</a> from Github and throw them into a Foundation folder in your project directory. From there, you can import the files at the top of your own SCSS stylesheet, like so:</p>

<%= code_example '
@import "foundation/variables", "foundation/components/global" "foundation/components/flex-video";
', :css %>

        <p>The markup is just like we showed you above, but you can apply the mixin to your own custom class or ID.</p>
<%= code_example '
<div class="your-class-name">
  <iframe width="420" height="315" src="http://www.youtube.com/embed/0_EW8aNgKlA" frameborder="0" allowfullscreen></iframe>
</div>
', :html %>

        <h5>Quick Mixin</h5>
        <p>You can build your flex-video containers using our global mixin by including it on your custom class or ID in your own stylesheet. The defaults can be modified using the available variables. The global mixin looks like this:</p>

<%= code_example '
/* Using the default styles */
.your-class-name { @include flex-video-container; }', :css %>

        <h5>Default SCSS Variables</h5>
        <%= settings_table_for('flex-video') %>

        <p><strong>Note:</strong> <code>emCalc();</code> is a function we wrote to convert <code>px</code> to <code>em</code>. It is included in <strong>_variables.scss</strong>.</p>

      </div>
    </div>
  </div>
  <div class="large-3 pull-9 columns">
    <%= render "_sidebar-components.html.erb" %>
  </div>
</div> -->
